// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: mflow/apps/build/pb/rpc.proto

package build

import (
	request "github.com/infraboard/mcube/v2/http/request"
	request1 "github.com/infraboard/mcube/v2/pb/request"
	resource "github.com/infraboard/mcube/v2/pb/resource"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务列表, 已可以手动指定需要执行构建的服务Id
	// @gotags: bson:"service_ids" json:"service_ids"
	ServiceIds []string `protobuf:"bytes,2,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids" bson:"service_ids"`
	// 自动部署相关配置
	// @gotags: bson:"auto_deploy_options" json:"auto_deploy_options"
	AutoDeployOptions *AutoDeployOptions `protobuf:"bytes,3,opt,name=auto_deploy_options,json=autoDeployOptions,proto3" json:"auto_deploy_options" bson:"auto_deploy_options"`
}

func (x *RunBuildRequest) Reset() {
	*x = RunBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunBuildRequest) ProtoMessage() {}

func (x *RunBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunBuildRequest.ProtoReflect.Descriptor instead.
func (*RunBuildRequest) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *RunBuildRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *RunBuildRequest) GetAutoDeployOptions() *AutoDeployOptions {
	if x != nil {
		return x.AutoDeployOptions
	}
	return nil
}

// 自动部署相关配置
type AutoDeployOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否开启服务的自动部署,如果开启 构建成功后会执行自动部署
	// @gotags: bson:"enabled" json:"enabled"
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled" bson:"enabled"`
	// 自动部署的环境列表, 那些环境允许执行自动部署
	// @gotags: bson:"envs" json:"envs"
	Envs []string `protobuf:"bytes,2,rep,name=envs,proto3" json:"envs" bson:"envs"`
}

func (x *AutoDeployOptions) Reset() {
	*x = AutoDeployOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoDeployOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoDeployOptions) ProtoMessage() {}

func (x *AutoDeployOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoDeployOptions.ProtoReflect.Descriptor instead.
func (*AutoDeployOptions) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *AutoDeployOptions) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AutoDeployOptions) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

type QueryBuildConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源范围
	// @gotags: json:"scope"
	Scope *resource.Scope `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope"`
	// 资源标签过滤
	// @gotags: json:"filters"
	Filters []*resource.LabelRequirement `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters"`
	// 分页参数
	// @gotags: json:"page"
	Page *request.PageRequest `protobuf:"bytes,3,opt,name=page,proto3" json:"page"`
	// 所属服务
	// @gotags: json:"service_ids"
	ServiceIds []string `protobuf:"bytes,4,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids"`
	// 事件名称
	// @gotags: json:"event"
	Event string `protobuf:"bytes,5,opt,name=event,proto3" json:"event"`
	// 分支名称
	// @gotags: json:"branche"
	Branche string `protobuf:"bytes,6,opt,name=branche,proto3" json:"branche"`
	// 是否启用
	// @gotags: json:"enabled"
	Enabled *bool `protobuf:"varint,7,opt,name=enabled,proto3,oneof" json:"enabled"`
}

func (x *QueryBuildConfigRequest) Reset() {
	*x = QueryBuildConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBuildConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBuildConfigRequest) ProtoMessage() {}

func (x *QueryBuildConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBuildConfigRequest.ProtoReflect.Descriptor instead.
func (*QueryBuildConfigRequest) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *QueryBuildConfigRequest) GetScope() *resource.Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *QueryBuildConfigRequest) GetFilters() []*resource.LabelRequirement {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *QueryBuildConfigRequest) GetPage() *request.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *QueryBuildConfigRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *QueryBuildConfigRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *QueryBuildConfigRequest) GetBranche() string {
	if x != nil {
		return x.Branche
	}
	return ""
}

func (x *QueryBuildConfigRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type UpdateBuildConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新模式
	// @gotags: json:"update_mode"
	UpdateMode request1.UpdateMode `protobuf:"varint,1,opt,name=update_mode,json=updateMode,proto3,enum=infraboard.mcube.request.UpdateMode" json:"update_mode"`
	// 构建配置Id
	// @gotags: json:"id"
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	// 更新人
	// @gotags: json:"update_by"
	UpdateBy string `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by"`
	// 创建信息
	// @gotags: json:"spec"
	Spec *CreateBuildConfigRequest `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec"`
}

func (x *UpdateBuildConfigRequest) Reset() {
	*x = UpdateBuildConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBuildConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBuildConfigRequest) ProtoMessage() {}

func (x *UpdateBuildConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBuildConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateBuildConfigRequest) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBuildConfigRequest) GetUpdateMode() request1.UpdateMode {
	if x != nil {
		return x.UpdateMode
	}
	return request1.UpdateMode(0)
}

func (x *UpdateBuildConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBuildConfigRequest) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *UpdateBuildConfigRequest) GetSpec() *CreateBuildConfigRequest {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteBuildConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 构建配置Id
	// @gotags: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteBuildConfigRequest) Reset() {
	*x = DeleteBuildConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBuildConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBuildConfigRequest) ProtoMessage() {}

func (x *DeleteBuildConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBuildConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteBuildConfigRequest) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteBuildConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeBuildConfigRequst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 构建配置Id
	// @gotags: json:"id" validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required"`
}

func (x *DescribeBuildConfigRequst) Reset() {
	*x = DescribeBuildConfigRequst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeBuildConfigRequst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeBuildConfigRequst) ProtoMessage() {}

func (x *DescribeBuildConfigRequst) ProtoReflect() protoreflect.Message {
	mi := &file_mflow_apps_build_pb_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeBuildConfigRequst.ProtoReflect.Descriptor instead.
func (*DescribeBuildConfigRequst) Descriptor() ([]byte, []int) {
	return file_mflow_apps_build_pb_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeBuildConfigRequst) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_mflow_apps_build_pb_rpc_proto protoreflect.FileDescriptor

var file_mflow_apps_build_pb_rpc_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x1a, 0x1f, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8d, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x61, 0x75,
	0x74, 0x6f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x41, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e,
	0x76, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0xd4, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x44, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x32, 0xa5, 0x04, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x6a, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6b, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x74, 0x12, 0x6d, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x6a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6a, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x6d, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mflow_apps_build_pb_rpc_proto_rawDescOnce sync.Once
	file_mflow_apps_build_pb_rpc_proto_rawDescData = file_mflow_apps_build_pb_rpc_proto_rawDesc
)

func file_mflow_apps_build_pb_rpc_proto_rawDescGZIP() []byte {
	file_mflow_apps_build_pb_rpc_proto_rawDescOnce.Do(func() {
		file_mflow_apps_build_pb_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_mflow_apps_build_pb_rpc_proto_rawDescData)
	})
	return file_mflow_apps_build_pb_rpc_proto_rawDescData
}

var file_mflow_apps_build_pb_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mflow_apps_build_pb_rpc_proto_goTypes = []interface{}{
	(*RunBuildRequest)(nil),           // 0: infraboard.mflow.build.RunBuildRequest
	(*AutoDeployOptions)(nil),         // 1: infraboard.mflow.build.AutoDeployOptions
	(*QueryBuildConfigRequest)(nil),   // 2: infraboard.mflow.build.QueryBuildConfigRequest
	(*UpdateBuildConfigRequest)(nil),  // 3: infraboard.mflow.build.UpdateBuildConfigRequest
	(*DeleteBuildConfigRequest)(nil),  // 4: infraboard.mflow.build.DeleteBuildConfigRequest
	(*DescribeBuildConfigRequst)(nil), // 5: infraboard.mflow.build.DescribeBuildConfigRequst
	(*resource.Scope)(nil),            // 6: infraboard.mcube.resource.Scope
	(*resource.LabelRequirement)(nil), // 7: infraboard.mcube.resource.LabelRequirement
	(*request.PageRequest)(nil),       // 8: infraboard.mcube.page.PageRequest
	(request1.UpdateMode)(0),          // 9: infraboard.mcube.request.UpdateMode
	(*CreateBuildConfigRequest)(nil),  // 10: infraboard.mflow.build.CreateBuildConfigRequest
	(*BuildConfig)(nil),               // 11: infraboard.mflow.build.BuildConfig
	(*BuildConfigSet)(nil),            // 12: infraboard.mflow.build.BuildConfigSet
}
var file_mflow_apps_build_pb_rpc_proto_depIdxs = []int32{
	1,  // 0: infraboard.mflow.build.RunBuildRequest.auto_deploy_options:type_name -> infraboard.mflow.build.AutoDeployOptions
	6,  // 1: infraboard.mflow.build.QueryBuildConfigRequest.scope:type_name -> infraboard.mcube.resource.Scope
	7,  // 2: infraboard.mflow.build.QueryBuildConfigRequest.filters:type_name -> infraboard.mcube.resource.LabelRequirement
	8,  // 3: infraboard.mflow.build.QueryBuildConfigRequest.page:type_name -> infraboard.mcube.page.PageRequest
	9,  // 4: infraboard.mflow.build.UpdateBuildConfigRequest.update_mode:type_name -> infraboard.mcube.request.UpdateMode
	10, // 5: infraboard.mflow.build.UpdateBuildConfigRequest.spec:type_name -> infraboard.mflow.build.CreateBuildConfigRequest
	10, // 6: infraboard.mflow.build.RPC.CreateBuildConfig:input_type -> infraboard.mflow.build.CreateBuildConfigRequest
	2,  // 7: infraboard.mflow.build.RPC.QueryBuildConfig:input_type -> infraboard.mflow.build.QueryBuildConfigRequest
	5,  // 8: infraboard.mflow.build.RPC.DescribeBuildConfig:input_type -> infraboard.mflow.build.DescribeBuildConfigRequst
	3,  // 9: infraboard.mflow.build.RPC.UpdateBuildConfig:input_type -> infraboard.mflow.build.UpdateBuildConfigRequest
	4,  // 10: infraboard.mflow.build.RPC.DeleteBuildConfig:input_type -> infraboard.mflow.build.DeleteBuildConfigRequest
	11, // 11: infraboard.mflow.build.RPC.CreateBuildConfig:output_type -> infraboard.mflow.build.BuildConfig
	12, // 12: infraboard.mflow.build.RPC.QueryBuildConfig:output_type -> infraboard.mflow.build.BuildConfigSet
	11, // 13: infraboard.mflow.build.RPC.DescribeBuildConfig:output_type -> infraboard.mflow.build.BuildConfig
	11, // 14: infraboard.mflow.build.RPC.UpdateBuildConfig:output_type -> infraboard.mflow.build.BuildConfig
	11, // 15: infraboard.mflow.build.RPC.DeleteBuildConfig:output_type -> infraboard.mflow.build.BuildConfig
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_mflow_apps_build_pb_rpc_proto_init() }
func file_mflow_apps_build_pb_rpc_proto_init() {
	if File_mflow_apps_build_pb_rpc_proto != nil {
		return
	}
	file_mflow_apps_build_pb_build_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mflow_apps_build_pb_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mflow_apps_build_pb_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoDeployOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mflow_apps_build_pb_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBuildConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mflow_apps_build_pb_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBuildConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mflow_apps_build_pb_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBuildConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mflow_apps_build_pb_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeBuildConfigRequst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mflow_apps_build_pb_rpc_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mflow_apps_build_pb_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mflow_apps_build_pb_rpc_proto_goTypes,
		DependencyIndexes: file_mflow_apps_build_pb_rpc_proto_depIdxs,
		MessageInfos:      file_mflow_apps_build_pb_rpc_proto_msgTypes,
	}.Build()
	File_mflow_apps_build_pb_rpc_proto = out.File
	file_mflow_apps_build_pb_rpc_proto_rawDesc = nil
	file_mflow_apps_build_pb_rpc_proto_goTypes = nil
	file_mflow_apps_build_pb_rpc_proto_depIdxs = nil
}
