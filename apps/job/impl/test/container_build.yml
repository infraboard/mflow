apiVersion: batch/v1 # 版本号
kind: Job # 类型
metadata: # 元数据
  name: test-job # job 名称
  namespace: default # 所属命名空间
  labels: #标签
    app: app01
spec: # 详情描述
  completions: 1 # 指定 job 需要成功运行 Pods 的次数。默认值: 1
  parallelism: 1 # 指定 job 在任一时刻应该并发运行 Pods 的数量。默认值: 1，如果上面的 completions 为 6 ，这个参数为 3 ，表示有 6 个 pod，允许有 3 个 pod 并发运行
  activeDeadlineSeconds: 1800 # 指定 job 可运行的时间期限，超过时间还未结束，系统将会尝试进行终止。
  backoffLimit: 3 # 指定 job 失败后进行重试的次数。默认是 6
  # manualSelector: true # 是否可以使用 selector 选择器选择 pod，默认是 false
  # selector: # 选择器，通过它指定该控制器管理哪些 pod
  #   matchLabels:      # Labels 匹配规则
  #     app: counter-pod
  # matchExpressions: # Expressions 匹配规则
  #   - {key: app, operator: In, values: [counter-pod]}
  template: # 模板，当副本数量不足时，会根据下面的模板创建 pod 副本
    metadata:
      labels:
        app: build-pod
    spec:
      restartPolicy: Never # 重启策略只能设置为 Never 或者 OnFailure
      initContainers:
        - name: download
          image: registry.cn-hangzhou.aliyuncs.com/godev/git:2.39.2
          workingDir: /
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            [
              "-c",
              "git clone ${GIT_SSH_URL} workspace --branch=${GIT_BRANCH} --single-branch && cd workspace && git reset --hard ${GIT_COMMIT_ID}",
            ]
          env:
            - name: GIT_SSH_COMMAND
              value: ssh -i /etc/secret-volume/id_rsa -o StrictHostKeyChecking=no
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/secret-volume"
      containers:
        - image: gcr.lank8s.cn/kaniko-project/executor:v1.22.0-debug
          workingDir: /workspace
          imagePullPolicy: IfNotPresent
          name: build-and-push
          command: ["sh"]
          # /workspace/runtime/task.env 文件是用收集输出的环境变量的
          args:
            [
              "-c",
              "/kaniko/executor --cache=${CACHE_ENABLE} --cache-repo=${CACHE_REPO} --compressed-caching=${CACHE_COMPRESS} --custom-platform=${CUSTOM_PLATFORM} --destination=${IMAGE_REPOSITORY}:${APP_VERSION} --dockerfile=${APP_DOCKERFILE}",
            ]
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: kaniko-secret
              mountPath: /kaniko/.docker
      volumes:
        - name: workspace
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: ${git_ssh_secret}
            defaultMode: 0600
        - name: kaniko-secret
          secret:
            secretName: ${image_push_secret}
