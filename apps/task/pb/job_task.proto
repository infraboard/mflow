syntax = "proto3";

package infraboard.mflow.task;
option go_package = "github.com/infraboard/mflow/apps/task";

import "mflow/apps/job/pb/job.proto";
import "mflow/apps/pipeline/pb/pipeline.proto";

message JobTaskSet {
	// 总数量
	// @gotags: bson:"total" json:"total"
    int64 total = 1;
	// 清单
	// @gotags: bson:"items" json:"items"
    repeated JobTask items = 2;
}

message JobTask {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    Meta meta = 1;
	// task定义, job运行时参数
	// @gotags: bson:",inline" json:"spec"
	pipeline.Task spec = 2;
	// 任务当前状态
	// @gotags: bson:"status" json:"status"
	JobTaskStatus status = 3;
	// 关联Job
	// @gotags: bson:"job" json:"job"
	job.Job job = 4;
}

message Meta {
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 1;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 2;
    // 更新人
    // @gotags: bson:"update_by" json:"update_by"
    string update_by = 3;
}

enum STAGE {
	// 等待执行
	PENDDING = 0;
	// 调度中,或者队列中
	SCHEDULING = 4;
	// 创建中, Job创建时更新
	CREATING = 8;
	// 运行中, Job对应的Pod创建完成后更新, 可以查看Pod日志
	ACTIVE = 12;

	// 取消中
	CANCELING = 20;

	// 任务被取消
	CANCELED = 30;
	// 运行失败
	FAILED = 34;
	// 运行成功
	SUCCEEDED = 38;

	// 跳过执行, 比如Pipeline中的一些可选流程
	SKIPPED = 45;
}

message JobTaskStatus {
	// 合并后的运行时参数(job默认参数, 系统默认参数, 用户传入参数)
	// @gotags: bson:"run_params" json:"run_params"
	job.RunParamSet run_params = 12;
	// 任务当前状态
	// @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
	// 任务开始时间
	// @gotags: bson:"start_at" json:"start_at"
    int64 start_at = 2;
	// 任务结束时间
	// @gotags: bson:"end_at" json:"end_at"
    int64 end_at = 3;
	// 状态描述
	// @gotags: bson:"message" json:"message"
	string message = 4;
	// 任务状态详细描述, 用于Debug
	// @gotags: bson:"detail" json:"detail"
	string detail = 5;
	// Job Task运行时环境变量, 大写开头的变量会更新到pipline中, 注入到后续执行的任务中
	// 小写开头的变量, 作为Task运行后的输出, task自己保留
	// @gotags: bson:"runtime_envs" json:"runtime_envs"
	job.RunParamSet runtime_envs = 6;
	// 任务运行后的产物信息, 用于界面展示
	// @gotags: bson:"markdown_output" json:"markdown_output"
	string markdown_output = 7;
	// 任务所需的临时资源
	// @gotags: bson:"temporary_resources" json:"temporary_resources"
	repeated TemporaryResource temporary_resources = 8;
	// 任务事件
	// @gotags: bson:"events" json:"events"
	repeated pipeline.Event events = 9;
	// 事件回调状态
	// @gotags: bson:"webhooks" json:"webhooks"
	repeated pipeline.WebHook webhooks = 10;
	// Jot Task 关注人通知状态
	// @gotags: bson:"mention_users" json:"mention_users"
	repeated pipeline.MentionUser mention_users = 11;
	// 运行时需不需审核
	// @gotags: bson:"audit" json:"audit"
	pipeline.Audit audit = 13;
	// 状态扩展属性
	// @gotags: bson:"extension" json:"extension"
	map<string, string> extension = 15;
}

// 临时资源, 在Pipline允许结束时,调用释放
message TemporaryResource {
	// 资源的类型, 比如 configmap
	// @gotags: bson:"kind" json:"kind"
	string kind = 1;
	// 资源的名字, 资源的集群和Namespace 由job维护
	// @gotags: bson:"name" json:"name"
	string name = 2;
	// 资源的详情数据
	// @gotags: bson:"detail" json:"detail"
	string detail = 3;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 4;
    // 创建时间
    // @gotags: bson:"release_at" json:"release_at"
    int64 release_at = 5;
}

message RunTaskRequest {
	// 任务名称
	// @gotags: bson:"name" json:"name"
    string name = 1;
	// job名称定义
	// @gotags: bson:"job_spec" json:"job_spec"
    string job_spec = 2;
	// 试运行, 并不会真正执行Job
	// @gotags: bson:"dry_run" json:"dry_run"
	bool dry_run = 3;
	// 手动更新Job的状态, 默认由job runner的operator更新
	// @gotags: bson:"manual_update_status" json:"manual_update_status"
	bool manual_update_status = 4;
	// job运行时参数
	// @gotags: bson:"params" json:"params"
	job.RunParamSet params = 5;
	// 标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 15;
}

